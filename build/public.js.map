{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./src/public/index.js","webpack:///external {\"this\":[\"wp\",\"hooks\"]}"],"names":["settings","global","addFilter","defaultFn","url","el","join","indexOf","ids","getAttribute","split","map","s","encodeURIComponent","params","fetch","then","response","json"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;;QAEA;QACA;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;ACnEA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;;;AAGA;AAEA,IAAMA,QAAQ,GAAGC,MAAM,CAAC,2BAAD,CAAvB;AAEAC,kEAAS,CAAC,mCAAD,EAAsC,UAAtC,EAAkD,UAACC,SAAD,EAAe;AACzE,SAAO,UAACC,GAAD,EAAMC,EAAN,EAAa;AACnB,QAAMC,IAAI,GAAG,CAAC,CAAD,KAAOF,GAAG,CAACG,OAAJ,CAAY,GAAZ,CAAP,GAA0B,GAA1B,GAAgC,GAA7C,CADmB,CAEnB;;AACA,QAAMC,GAAG,GAAGH,EAAE,CACZI,YADU,CACG,SADH,EAEVC,KAFU,CAEJ,GAFI,EAGVC,GAHU,CAGN,UAACC,CAAD;AAAA,aAAOC,kBAAkB,CAACD,CAAD,CAAzB;AAAA,KAHM,CAAZ;AAIA,QAAME,MAAM,GAAG,UAAGR,IAAH,4CAAgDE,GAAG,CAACF,IAAJ,CAAS,QAAT,CAA/D;AAEA,WAAOS,KAAK,WAAIf,QAAQ,CAACI,GAAb,SAAmBU,MAAnB,EAAL,CAAkCE,IAAlC,CAAuC,UAACC,QAAD;AAAA,aAC7CA,QAAQ,CAACC,IAAT,EAD6C;AAAA,KAAvC,CAAP;AAGA,GAZD;AAaA,CAdQ,CAAT,C;;;;;;;;;;;;ACPA,aAAa,sCAAsC,EAAE,I","file":"public.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/public/index.js\");\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/**\n * WordPress dependencies\n */\nimport { addFilter } from \"@wordpress/hooks\";\n\nconst settings = global[\"_wlEntityRedirectSettings\"];\n\naddFilter(\"wl_context_cards_load_fn_supplier\", \"wordlift\", (defaultFn) => {\n\treturn (url, el) => {\n\t\tconst join = -1 === url.indexOf(\"?\") ? \"?\" : \"&\";\n\t\t// should load things\n\t\tconst ids = el\n\t\t\t.getAttribute(\"data-id\")\n\t\t\t.split(\";\")\n\t\t\t.map((s) => encodeURIComponent(s));\n\t\tconst params = `${join}website=1&entity-redirect=true&id[]=` + ids.join(\"&id[]=\");\n\n\t\treturn fetch(`${settings.url}${params}`).then((response) =>\n\t\t\tresponse.json()\n\t\t);\n\t};\n});\n","(function() { module.exports = this[\"wp\"][\"hooks\"]; }());"],"sourceRoot":""}